import React, { useState, useEffect } from 'react';
import './index.css';

const steps = [
  {
    title: '–®–∞–≥ 1 –∏–∑ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–æ–≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞',
    questions: [
      {
        text: '1. –£–∫–∞–∑–∞–Ω—ã –ª–∏ —Å—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö?',
        options: ['–î–∞', '–ù–µ—Ç'],
        hint: '–°—Ä–æ–∫–∏ –∏—â–∏—Ç–µ –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ (—Ä–∞–∑–¥–µ–ª 3)'
      },
      {
        text: '2. –ò–º–µ–µ—Ç—Å—è –ª–∏ –∞–∫—Ç –ø—Ä–∏—ë–º–∫–∏ —Å –¥–∞—Ç–æ–π –ø–æ—Å—Ç–∞–≤–∫–∏?',
        options: ['–î–∞', '–ù–µ—Ç'],
        hint: '–î–∞—Ç–∞ ‚Äî –≤ –∞–∫—Ç–µ –ø—Ä–∏—ë–º–∫–∏'
      },
      {
        text: '3. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ª–∏ –¥–∞—Ç—ã –ø–æ—Å—Ç–∞–≤–∫–∏ —É—Å–ª–æ–≤–∏—è–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞?',
        options: ['–î–∞', '–ù–µ—Ç', '–ß–∞—Å—Ç–∏—á–Ω–æ'],
        hint: '–°—Ä–∞–≤–Ω–∏—Ç–µ –∞–∫—Ç –∏ —É—Å–ª–æ–≤–∏—è'
      },
      {
        text: '4. –ï—Å—Ç—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–µ—Ä–µ–Ω–æ—Å–µ —Å—Ä–æ–∫–æ–≤?',
        options: ['–î–∞', '–ù–µ—Ç'],
        hint: '–ü–∏—Å—å–º–∞/—Ç–µ–ª–µ–≥—Ä–∞–º–º—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ä–æ–∫–æ–≤'
      }
    ]
  },
  {
    title: '–®–∞–≥ 2 –∏–∑ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
    questions: [
      {
        text: '1. –ò–º–µ–µ—Ç—Å—è –ª–∏ –∞–∫—Ç –ø—Ä–∏—ë–º–∫–∏ —Å –æ—Ç–º–µ—Ç–∫–æ–π –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–µ—Ñ–µ–∫—Ç–æ–≤?',
        options: ['–î–∞', '–ù–µ—Ç'],
        hint: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç –ö–°-2, –ö–°-3 –∏–ª–∏ –ø–æ –ì–û–°–¢ –† 15.201'
      },
      {
        text: '2. –£–∫–∞–∑–∞–Ω—ã –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≤ –∞–∫—Ç–µ –ø—Ä–∏—ë–º–∫–∏?',
        options: ['–î–∞', '–ù–µ—Ç'],
        hint: '–°—Ä–∞–≤–Ω–∏—Ç–µ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞–Ω–∏–µ–º'
      },
      {
        text: '3. –ï—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö/–≤—Ö–æ–¥–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π?',
        options: ['–î–∞', '–ù–µ—Ç', '–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'],
        hint: '–ï—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ –¢–ó ‚Äì –ø—Ä–∏–ª–∞–≥–∞—é—Ç—Å—è –∏—Å–ø—ã—Ç–∞–Ω–∏—è'
      },
      {
        text: '4. –ü—Ä–æ–¥—É–∫—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞ –±–µ–∑ –∑–∞–º–µ—á–∞–Ω–∏–π –ø–æ –∫–∞—á–µ—Å—Ç–≤—É?',
        options: ['–î–∞', '–ù–µ—Ç', '–ß–∞—Å—Ç–∏—á–Ω–æ'],
        hint: '–ò—â–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∏ –∏ –æ—Ç–º–µ—Ç–∫–∏ –≤ –∞–∫—Ç–µ'
      }
    ]
  }
];

function App() {
  const [stepIndex, setStepIndex] = useState(0);
  const [answers, setAnswers] = useState(() => {
    const saved = localStorage.getItem("answers");
    return saved ? JSON.parse(saved) : {};
  });

  useEffect(() => {
    localStorage.setItem("answers", JSON.stringify(answers));
  }, [answers]);

  const step = steps[stepIndex];

  const handleAnswer = (stepIdx, qIdx, value) => {
    const key = `step${stepIdx}-q${qIdx}`;
    setAnswers(prev => ({ ...prev, [key]: value }));
  };

  const next = () => {
    if (stepIndex < steps.length - 1) {
      setStepIndex(stepIndex + 1);
    } else {
      alert('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç—á—ë—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –Ω–∏–∂–µ.');
    }
  };

  const renderReport = () => (
    <div className="report">
      <h2>üßæ –û—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ</h2>
      {steps.map((s, si) => (
        <div key={si}>
          <h3>{s.title}</h3>
          <ul>
            {s.questions.map((q, qi) => {
              const key = `step${si}-q${qi}`;
              return (
                <li key={qi}>
                  <b>{q.text}</b><br />
                  –û—Ç–≤–µ—Ç: {answers[key] || "‚Äî"}
                </li>
              );
            })}
          </ul>
        </div>
      ))}
      <button onClick={() => {
        navigator.clipboard.writeText(
          Object.entries(answers).map(([k,v]) => `${k}: ${v}`).join('\n')
        );
        alert("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞");
      }}>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç</button>
    </div>
  );

  return (
    <div className="wrapper">
      <div className="logo">
        <img src="/logo.png" alt="logo" />
        <h2>GOZ Checker</h2>
      </div>
      <h1>{step.title}</h1>
      <form>
        {step.questions.map((q, i) => {
          const name = `step${stepIndex}-q${i}`;
          return (
            <div key={i} className="question">
              <p>{q.text}</p>
              <div className="options">
                {q.options.map((opt, j) => (
                  <label key={j}>
                    <input
                      type="radio"
                      name={name}
                      checked={answers[name] === opt}
                      onChange={() => handleAnswer(stepIndex, i, opt)}
                    /> <span>{opt}</span>
                  </label>
                ))}
              </div>
              <div className="hint">{q.hint}</div>
            </div>
          );
        })}
        <button type="button" className="btn-next" onClick={next}>–î–∞–ª–µ–µ</button>
      </form>
      {stepIndex === steps.length - 1 && renderReport()}
      <footer>–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –Ω–∞–¥–∑–æ—Ä–∞ –ø–æ –ì–û–ó ‚Ä¢ 2025</footer>
    </div>
  );
}

export default App;
